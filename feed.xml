<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="cn"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://lfcdepression.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://lfcdepression.github.io/" rel="alternate" type="text/html" hreflang="cn"/><updated>2024-10-05T16:09:24+00:00</updated><id>https://lfcdepression.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">扩散模型初步</title><link href="https://lfcdepression.github.io/blog/2024/%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E5%88%9D%E6%AD%A5/" rel="alternate" type="text/html" title="扩散模型初步"/><published>2024-10-02T15:12:00+00:00</published><updated>2024-10-02T15:12:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E5%88%9D%E6%AD%A5</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/%E6%89%A9%E6%95%A3%E6%A8%A1%E5%9E%8B%E5%88%9D%E6%AD%A5/"><![CDATA[<h2 id="目录">目录</h2> <ul> <li><a href="#目录">目录</a></li> <li><a href="#1-背景">1 背景</a> <ul> <li><a href="#11-elbo证据下界">1.1 ELBO证据下界</a></li> <li><a href="#12-variational-autoencoders">1.2 Variational Autoencoders</a></li> </ul> </li> <li><a href="#2-变分扩散模型">2 变分扩散模型</a> <ul> <li><a href="#21-模型框架">2.1 模型框架</a></li> <li><a href="#22-learning-diffusion-noise-parameters">2.2 Learning Diffusion Noise Parameters</a></li> <li><a href="#23-three-equivalent-interpretations">2.3 Three Equivalent Interpretations</a></li> </ul> </li> <li><a href="#3-score-based-generative-models">3 Score-based Generative Models</a></li> <li><a href="#4-guidence">4 Guidence</a> <ul> <li><a href="#41-classifier-guidance">4.1 Classifier Guidance</a></li> <li><a href="#42-classifier-free-guidance">4.2 Classifier-Free Guidance</a></li> </ul> </li> </ul> <h2 id="1-背景">1 背景</h2> <h3 id="11-elbo证据下界">1.1 ELBO证据下界</h3> <p>可以将潜在变量和观测变量视为一个联合分布 \(p(\boldsymbol{x,z})\) ，一个基础的思路是使用“似然法”，是所有观测 \(\boldsymbol{x}\) 的似然 \(p(\boldsymbol{x})\) 最大化，有两种方法可以得到似然：</p> <p>\begin{equation}p(\boldsymbol{x})=\int p(\boldsymbol{x},\boldsymbol{z})\mathrm{d}\boldsymbol{z}\end{equation}</p> <p>或者可以使用条件概率：</p> <p>\begin{equation}p(\boldsymbol{x})=\frac{p(\boldsymbol{x},\boldsymbol{z})}{p(\boldsymbol{z}\vert\boldsymbol{x})}\end{equation}</p> <p>这两个式子在计算上都有很大的困难，第一个式子的问题在于需要对所有的\(\boldsymbol{z}\)进行积分，第二个式子的难度在于需要知道\(p(\boldsymbol{z}\vert\boldsymbol{x})\)，但是利用这两个公式我们可以得到ELBO，即证据下界。证据是观测数据的对数似然，最大化ELBO时，即完美情况下，ELBO与证据相等。</p> <p>\begin{equation}\log p(\boldsymbol{x})\geq\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\bigg[\log\frac{p(\boldsymbol{x},\boldsymbol{z})}{q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}\bigg]\end{equation}</p> <p>这里，\(q_\phi(\boldsymbol{z}\vert\boldsymbol{x})\)是优化参数为\(\phi\)的变分近似分布。是一个可参数化的模型，用来估计给定观测值\(\boldsymbol{x}\)在潜在变量\(\boldsymbol{z}\)上的真实分布。</p> <p>\begin{equation}\begin{aligned} \operatorname{log}p(\boldsymbol{x})&amp; =\int q_\phi(\boldsymbol{z}\vert\boldsymbol{x})\log p(\boldsymbol{x})\mathrm{d}\boldsymbol{z} <br/> &amp;=\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\begin{bmatrix}\log p(\boldsymbol{x})\end{bmatrix} <br/> &amp;=\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\left[\log\frac{p(\boldsymbol{x},\boldsymbol{z})q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}{p(\boldsymbol{z}\vert\boldsymbol{x})q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}\right] <br/> &amp;=\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\Bigg[\log\frac{p(\boldsymbol{x},\boldsymbol{z})}{q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}\Bigg]-\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\Bigg[\log\frac{p(\boldsymbol{z}\vert\boldsymbol{x})}{q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}\Bigg] <br/> &amp;=\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\Bigg[\log\frac{p(\boldsymbol{x},\boldsymbol{z})}{q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}\Bigg]+D_{KL}(q_\phi(\boldsymbol{z}\vert\boldsymbol{x})\Vert p(\boldsymbol{z}\vert\boldsymbol{x})) \end{aligned}\end{equation}</p> <p>即证据等于证据下界ELBO与近似后验分布\(q_{\phi}(\boldsymbol{z}\vert \boldsymbol{x})\)、真实后验分布\(p(\boldsymbol{z}\vert\boldsymbol{x})\)的KL散度之和。</p> <p>在引入潜变量之后，我们的目标是学习描述观测数据的潜在结构，即通过最小化KL散度优化变分后验分布的参数使其与真实后验分布相同。但因为无法直接得到真实后验，因此无法直接进行优化。但因为数据似然（证据）是从联合分布中求出所有的潜在变量的边缘分布得到，与\(\phi\)无关，因此是相对于\(\phi\)的常数。即ELBO与KL散度之和为常数，因此对于\(\phi\)的ELBO最大化，一定会得到KL散度的最小化，因此ELBO可以作为模型建立的替代目标被最大化。</p> <h3 id="12-variational-autoencoders">1.2 Variational Autoencoders</h3> <p>在VAE中使用变分直接最大化ELBO，在参数\(\phi\)参数化的后验分布的潜空间中搜素最优解，被称为自编码器。</p> <p>\begin{equation}\begin{aligned} &amp;\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\left[\log\frac{p(\boldsymbol{x},\boldsymbol{z})}{q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}\right] <br/> =&amp;\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\left[\log\frac{p_\theta(\boldsymbol{x}\vert\boldsymbol{z})p(\boldsymbol{z})}{q_\phi(\boldsymbol{z}\vert\boldsymbol{x})}\right] <br/> =&amp;\underbrace{\mathbb{E}<em>{q</em>\phi(\boldsymbol{z}\vert\boldsymbol{x})}\left[\log p_\theta(\boldsymbol{x}\vert\boldsymbol{z})\right]}<em>{\text{重建项}}-\underbrace{D</em>{KL}(q_\phi(\boldsymbol{z}\vert\boldsymbol{x})\parallel p(\boldsymbol{z}))}_{\text{先验匹配项}} \end{aligned}\end{equation}</p> <p>这种情况下，学习一个编码器\(q_\phi(\boldsymbol{z}\vert\boldsymbol{x})\)，将输入转换为潜在变量上的分布，同时学习一个函数\(p_\theta(\boldsymbol{x}\vert\boldsymbol{z})\)将给定潜在变量转换为观测值，即解码器。</p> <p>第一项是解码器重建似然性，第二项是变分分布和先验分布在潜在变量空间上的相似度，最大化ELBO相当于最大化第一项，并最小化第二项。</p> <p>VAE的一个特点是联合优化两个参数\(\phi\)和\(\theta\)，先验通常被选择为标准高斯分布：</p> <p>\begin{equation}\begin{aligned}q_\phi(\boldsymbol{z}\vert\boldsymbol{x})&amp;=\mathcal{N}(\boldsymbol{z};\boldsymbol{\mu}<em>\phi(\boldsymbol{x}),\boldsymbol{\sigma}</em>\phi(\boldsymbol{x})\boldsymbol{I})\p(\boldsymbol{z})&amp;=\mathcal{N}(\boldsymbol{z};0,\boldsymbol{I})\end{aligned}\end{equation}</p> <p>由此，ELBO的KL散度可以被解析计算，重构项（第一项）可以使用Monte Carlo方法近似：</p> <p>\begin{equation}\begin{aligned}&amp;\arg\max_{\phi,\theta}\mathbb{E}<em>{q</em>{\phi}(\boldsymbol{z}\vert\boldsymbol{x})}\left\lfloor\log p_{\theta}(\boldsymbol{x}\vert\boldsymbol{z})\right\rfloor-D_{KL}(q_{\phi}(\boldsymbol{z}\vert\boldsymbol{x})\parallel p(\boldsymbol{z})) <br/> \approx&amp;\arg\max_{\phi,\theta}\frac{1}{I}\sum_{I}^{L}\log p_{\theta}(\boldsymbol{x} \vert \boldsymbol{z}^{(l)})-D_{KL}(q_{\phi}(\boldsymbol{z} \vert \boldsymbol{x})\vert p(\boldsymbol{z}))\end{aligned}\end{equation}</p> <p>我们从每个数据集的观察值使用\(q_\phi(\boldsymbol{z}\vert\boldsymbol{x})\)对潜变量进行采样，但我们计算损失的每个值都是随机采样的，会导致不可导。使用重参数化可以解决这个问题，重参数化将一个随机变量写为一个噪声变量的确定的函数，由此可以使用梯度下降优化非随机项，例如正态分布中采样的样本满足：</p> <p>\begin{equation}\boldsymbol{x}=\boldsymbol{\mu}+\boldsymbol{\sigma}\boldsymbol{\epsilon}\quad\mathrm{with}\quad \boldsymbol{\epsilon}\sim\mathcal{N}(\boldsymbol{\epsilon};0,\boldsymbol{I})\end{equation}</p> <p>在VAE中，每个\(\boldsymbol{z}\)都被计算为输入\(\boldsymbol{x}\)和噪声变量\(\boldsymbol{\epsilon}\)的确定性函数：</p> <p>\begin{equation}\boldsymbol{z}=\boldsymbol{\mu}<em>\phi(\boldsymbol{x})+\boldsymbol{\sigma}</em>\phi(\boldsymbol{x})\odot\boldsymbol{\epsilon} \quad with\quad \boldsymbol{\epsilon}\sim\mathcal{N}(\boldsymbol{\epsilon};0,\boldsymbol{I})\end{equation}</p> <p>其中\(\odot\)表示逐个元素相乘，在重参数化的情况下，梯度可以根据\(\phi\)计算，由此优化\(\boldsymbol{\mu}_\phi\)和 \(\boldsymbol{\sigma}_\phi\)，VAE利用重参数化和Monte Carlo来优化ELBO。</p> <p>训练完成之后，可以直接从潜空间采样，并将其输入解码器生成。潜变量维度小于样本维度时，会有比较好的结果。</p> <h2 id="2-变分扩散模型">2 变分扩散模型</h2> <h3 id="21-模型框架">2.1 模型框架</h3> <p>变分扩散模型（Variational Diffusion Model，VDM）最简单的理解是一个具有三个关键限制的马尔可夫层级变分自编码器：</p> <ul> <li>潜在维度与数据维度完全相等。</li> <li>每个时刻潜在编码器的结构不是学习得来的，而是预定义为线性高斯模型。</li> <li>潜在编码器的高斯参数随时间变化，使得最终时刻的潜在分布是标准高斯分布。</li> </ul> <p>根据第一个限制，我们可以得到将真实数据样本和潜变量多都表示为\(\boldsymbol{x}_{t}\)，其中\(t=0\)时表示真实数据，\(t\in[1,T]\)，表示相应的具有由\(t\)索引的层级的潜变量。</p> <p>\begin{equation}q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)=\prod</em>{t=1}^Tq(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t-1})\end{equation}</p> <p>根据第二个假设，编码器中每个潜变量分布是围绕前一个潜变量的高斯分布，编码器不会被学习，而是被固定，均值和标准差可以事先设置为超参数或者学习的参数：</p> <p>\begin{equation}q(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t-1})=\mathcal{N}(\boldsymbol{x}<em>t;\sqrt{\alpha_t}\boldsymbol{x}</em>{t-1},(1-\alpha_t)\boldsymbol{I})\end{equation}</p> <p>根据第三个假设，最终潜变量分布是一个标准高斯分布：</p> <p>\begin{equation}p(\boldsymbol{x}<em>{0:T})=p(\boldsymbol{x}_T)\prod</em>{t=1}^Tp_\theta(\boldsymbol{x}_{t-1}\vert\boldsymbol{x}_t)\quad \text{where} \quad p(\boldsymbol{x}_T)=\mathcal{N}(\boldsymbol{x}_T;0,\boldsymbol{I})\end{equation}</p> <p>编码器分布\(q\)不再由\(\phi\)参数化，因此我们只需要关心参数\(\theta\)，来学习反向过程的条件概率。</p> <p>使用最大化证据下界ELBO来进行优化：</p> <p>\begin{equation}\begin{aligned}\log p(\boldsymbol{x})&amp;=\log\int\frac{p(\boldsymbol{x}<em>{0:T})q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>{0})}{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>{0})}\mathrm{d}\boldsymbol{x}</em>{1:T}\&amp;=\log\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>{0})}\left[\frac{p(\boldsymbol{x}</em>{0:T})}{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}</em>{0})}\right]\&amp;\geq\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>{0})}\left[\log\frac{p(\boldsymbol{x}</em>{0:T})}{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}</em>{0})}\right]\end{aligned}\end{equation}</p> <p>更进一步我们可以得到：</p> <p>\begin{equation}\begin{aligned} &amp;\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>0)}\bigg\lfloor\log\frac{p(\boldsymbol{x}</em>{0:T})}{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\bigg\rfloor <br/> &amp;=\mathbb{E}</em>{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\Bigg[\log\frac{p(\boldsymbol{x}_T)\prod</em>{t=1}^Tp_\theta(\boldsymbol{x}<em>{t-1}\vert\boldsymbol{x}_t)}{\prod</em>{t=1}^Tq(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t-1})}\Bigg] <br/> &amp;=\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>0)}\left[\log\frac{p(\boldsymbol{x}_T)p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)\prod</em>{t=1}^{T-1}p_\theta(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t+1})}{q(\boldsymbol{x}<em>T\vert\boldsymbol{x}</em>{T-1})\prod_{t=1}^{T-1}q(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t-1})}\right] <br/> &amp;=\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>0)}\Big[\log p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)\Big]+\mathbb{E}</em>{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\Bigg[\log\frac{p(\boldsymbol{x}_T)}{q(\boldsymbol{x}_T\vert\boldsymbol{x}</em>{T-1})}\Bigg]\&amp;+\sum_{t=1}^{T-1}\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>0)}\Bigg[\log\frac{p</em>\theta(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t+1})}{q(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t-1})}\Bigg] <br/> &amp;=\underbrace{\mathbb{E}<em>{q(\boldsymbol{x}_1\vert\boldsymbol{x}_0)}\left[\log p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)\right]}</em>{\text{重构项}}\&amp;-\underbrace{\mathbb{E}<em>{q(\boldsymbol{x}</em>{T-1}\vert\boldsymbol{x}<em>0)}\left[D</em>{KL}(q(\boldsymbol{x}<em>T\vert\boldsymbol{x}</em>{T-1})\vert p(\boldsymbol{x}<em>T))\right]}</em>{\text{先验匹配项}}\&amp;-\underbrace{\sum_{t=1}^{T-1}\mathbb{E}<em>{q(\boldsymbol{x}</em>{t-1},\boldsymbol{x}<em>{t+1}\vert\boldsymbol{x}_0)}\left[D</em>{KL}(q(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t-1})\vert p_\theta(\boldsymbol{x}<em>t \vert\boldsymbol{x}</em>{t+1}))\right]}_{\text{一致性项}} \end{aligned}\end{equation}</p> <ul> <li>第一项是重构项，预测了给定第一步潜变量时原始数据的对数概率。</li> <li>第二项是先验匹配项，最终潜变量分布和高斯分布相匹配时，可以被最小化。这一项自然最小化，而不需要进行优化。</li> <li>第三项是一致性项，要求每个中间时间步上，从更多噪声的图像进行去噪处理，从而与更清晰的图像进行加噪处理的结果匹配，即向前和向后的一致性。</li> </ul> <p>现在出现了一个问题：在每一个时间步上都需要训练一次第三项，而为了保证第二项最小化，我们需要足够多的时间步，因此会导致训练时间成本极高。</p> <p>同时，ELBO所有项都可以通过期望计算，因此都可以使用Monte Carlo方法，但实际上我们很难得到最优解，因为一致性项还有一个问题：是对每个时间步骤计算两个随机变量的期望，计算结果的方差高于一个随机变量的项，因此，在求和之后ELBO还可以有较高的方差。</p> <p>因此从计算成本和精度上，我们需要对之前的方法进行进一步的改进。精度的问题涉及模型是否可用，因此我们先解决精度问题，即改成对一个随机变量采样，根据贝叶斯定理我们有：</p> <p>\begin{equation}q(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t,\boldsymbol{x}_0)=\frac{q(\boldsymbol{x}_t\vert \boldsymbol{x}</em>{t-1},\boldsymbol{x}<em>0)q(\boldsymbol{x}</em>{t-1}\vert \boldsymbol{x}_0)}{q(\boldsymbol{x}_t\vert \boldsymbol{x}_0)}\end{equation}</p> <p>因此我们可以尝试使用上面这个公式将一致性公式转换为，真实后验和预测后验概率的匹配：</p> <p>\begin{equation}\begin{aligned} &amp;\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>0)}\bigg[\log\frac{p(\boldsymbol{x}</em>{0:T})}{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\bigg] <br/> &amp;=\mathbb{E}</em>{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\left[\log\frac{p(\boldsymbol{x}_T)p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)\prod</em>{t=2}^Tp_\theta(\boldsymbol{x}<em>{t-1}\vert\boldsymbol{x}_t)}{q(\boldsymbol{x}_1\vert\boldsymbol{x}_0)\prod</em>{t=2}^Tq(\boldsymbol{x}<em>t\vert\boldsymbol{x}</em>{t-1},\boldsymbol{x}<em>0)}\right] <br/> &amp;=\mathbb{E}</em>{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\left[\log\frac{p(\boldsymbol{x}_T)p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)}{q(\boldsymbol{x}_1\vert\boldsymbol{x}_0)}+\log\prod</em>{t=2}^T\frac{p_\theta(\boldsymbol{x}<em>{t-1}\vert\boldsymbol{x}_t)}{\frac{q(\boldsymbol{x}</em>{t-1}\vert\boldsymbol{x}<em>t,\boldsymbol{x}_0)q(\boldsymbol{x}_t\vert\boldsymbol{x}_0)}{q(\boldsymbol{x}</em>{t-1}\vert\boldsymbol{x}<em>0)}}\right] <br/> &amp;=\mathbb{E}</em>{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\left[\log\frac{p(\boldsymbol{x}_T)p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)}{q(\boldsymbol{x}_1\vert\boldsymbol{x}_0)}+\log\frac{q(\boldsymbol{x}_1\vert\boldsymbol{x}_0)}{q(\boldsymbol{x}_T\vert\boldsymbol{x}_0)}\+\log\prod</em>{t=2}^T\frac{p_\theta(\boldsymbol{x}<em>{t-1}\vert\boldsymbol{x}_t)}{q(\boldsymbol{x}</em>{t-1}\vert\boldsymbol{x}<em>t,\boldsymbol{x}_0)}\right] <br/> &amp;=\mathbb{E}</em>{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\left[\log p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)\right]+\mathbb{E}</em>{q(\boldsymbol{x}<em>{1:T}\vert\boldsymbol{x}_0)}\left[\log\frac{p(\boldsymbol{x}_T)}{q(\boldsymbol{x}_T\vert\boldsymbol{x}_0)}\right]\&amp;+\sum</em>{t=2}^T\mathbb{E}<em>{q(\boldsymbol{x}</em>{1:T}\vert\boldsymbol{x}<em>0)}\left[\log\frac{p</em>\theta(\boldsymbol{x}<em>{t-1}\vert\boldsymbol{x}_t)}{q(\boldsymbol{x}</em>{t-1}\vert\boldsymbol{x}<em>t,\boldsymbol{x}_0)}\right] <br/> &amp;=\underbrace{\mathbb{E}</em>{q(\boldsymbol{x}<em>1\vert\boldsymbol{x}_0)}\left[\log p</em>\theta(\boldsymbol{x}<em>0\vert\boldsymbol{x}_1)\right]}</em>{\text{重构项}} <br/> &amp;-\underbrace{D_{KL}(q(\boldsymbol{x}<em>T\vert\boldsymbol{x}_0)\parallel p(\boldsymbol{x}_T))}</em>{\text{先验匹配项}} <br/> &amp;-\underbrace{\sum_{t=2}^T\mathbb{E}<em>{q(\boldsymbol{x}_t,\boldsymbol{x}</em>{t-1}\vert\boldsymbol{x}<em>0)}\left[D</em>{KL}(q(\boldsymbol{x}<em>{t-1}\vert\boldsymbol{x}_t,\boldsymbol{x}_0)\parallel p</em>\theta(\boldsymbol{x}<em>{t-1}\vert\boldsymbol{x}_t))\right]}</em>{\text{去噪匹配项}} \end{aligned}\begin{equation}</p> <p>第三项从一致性项变为去噪匹配项，即使预测后验概率与真实后验概率尽可能相同。</p> <p>对于前面的式子，我们已经知道其中一部分，即\(q(\boldsymbol{x}_t\vert \boldsymbol{x}_{t-1},\boldsymbol{x}_0)=q(\boldsymbol{x}_t\vert \boldsymbol{x}_{t-1})=\mathcal{N}(\boldsymbol{x}_t;\sqrt{\alpha_t\boldsymbol{x}_{t-1}},(1-\alpha_t))\boldsymbol{I})\)，我们还需要得到：\(q(\boldsymbol{x}_t\vert \boldsymbol{x}_0)\) 和\(q(\boldsymbol{x}_{t-1}\vert \boldsymbol{x}_0)\)的形式，使用重参数化技巧，样本 \(\boldsymbol{x}_t\sim q(\boldsymbol{x}_t\vert \boldsymbol{x}_{t-1})\) ：</p> <p>\begin{equation}\boldsymbol{x}<em>t=\sqrt{\alpha_t}\boldsymbol{x}</em>{t-1}+\sqrt{1-\alpha_t}\boldsymbol{\epsilon}\quad\text{with}\quad\boldsymbol{\epsilon}\sim\mathcal{N}(\boldsymbol{x}_t;0,\boldsymbol{I})\end{equation}</p> <p>类似的，可以递推到下一项：</p> <p>\begin{equation}\boldsymbol{x}<em>{t-1}=\sqrt{\alpha</em>{t-1}}\boldsymbol{x}<em>{t-2}+\sqrt{1-\alpha</em>{t-1}}\boldsymbol{\epsilon}\quad\mathrm{with}\quad\boldsymbol{\epsilon}\sim\mathcal{N}(\boldsymbol{x}_{t-1};\boldsymbol{0},\boldsymbol{I})\end{equation}</p> <p>根据高斯分布的叠加方法：</p> <p>\begin{equation}\begin{aligned}\boldsymbol{x}<em>{t}&amp;=\sqrt{\alpha</em>{t}}\left(\sqrt{\alpha_{t-1}}\boldsymbol{x}<em>{t-2}+\sqrt{1-\alpha</em>{t-1}}\boldsymbol{\epsilon}<em>{t-1}\right)+\sqrt{1-\alpha}\boldsymbol{\epsilon}</em>{t}\&amp;=\sqrt{\alpha_{t}\alpha_{t-1}}\boldsymbol{x}<em>{t-2}+\sqrt{1-\alpha</em>{t}\alpha_{t-1}}\boldsymbol{\epsilon}\quad \text{with}\quad \boldsymbol{\epsilon}\sim\mathcal{N}(\boldsymbol{x}<em>t;0,\boldsymbol(1-\alpha_t \alpha</em>{t-1}){I})\end{aligned}\end{equation}</p> <p>以此类推，所有的\(\boldsymbol{x}_t\)都可以关联到\(\boldsymbol{x}_0\)</p> <p>\begin{equation}\begin{aligned}\boldsymbol{x}<em>{t}&amp;=\sqrt{\prod</em>{i=1}^{t}\alpha_{i}}\boldsymbol{x}<em>{0}+\sqrt{1-\prod</em>{i=1}^{t}\alpha_{i}}\epsilon\&amp;=\sqrt{\bar{\alpha}_t}\boldsymbol{x}_0+\sqrt{1-\bar{\alpha}_t}\boldsymbol{\epsilon} \sim\mathcal{N}(\boldsymbol{x}_t;\sqrt{\bar{\alpha}_t}\boldsymbol{x}_0,(1-\bar{\alpha}_t)\boldsymbol{I})\end{aligned}\end{equation}</p> <p>由此，对ELBO中的公式有：</p> <p>\begin{equation}\begin{aligned} &amp;q(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t,\boldsymbol{x}_0) <br/> =&amp;\frac{q(\boldsymbol{x}_t\vert \boldsymbol{x}</em>{t-1},\boldsymbol{x}<em>0)q(\boldsymbol{x}</em>{t-1}\vert \boldsymbol{x}<em>0)}{q(\boldsymbol{x}_t\vert \boldsymbol{x}_0)} <br/> =&amp;\frac{\mathcal{N}(\boldsymbol{x}_t;\sqrt{\alpha_t}\boldsymbol{x}</em>{t-1},(1-\alpha_t)\boldsymbol{I})\mathcal{N}(\boldsymbol{x}<em>{t-1};\sqrt{\bar{\alpha}</em>{t-1}}\boldsymbol{x}<em>0,(1-\bar{\alpha}</em>{t-1})\boldsymbol{I})}{\mathcal{N}(\boldsymbol{x}_t;\sqrt{\bar{\alpha}_t}\boldsymbol{x}_0,(1-\bar{\alpha}_t)\boldsymbol{I})} \end{aligned}\end{equation}</p> <p>可以将上面的式子转换成具体公式，进行进一步化简，将其中每一项展开为具体的高斯分布公式：</p> <p>\begin{equation}\begin{aligned} &amp;q(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t,\boldsymbol{x}_0) \ \propto&amp;\exp\left{-\left[\frac{(\boldsymbol{x}_t-\sqrt{\alpha_t}\boldsymbol{x}</em>{t-1})^2}{2(1-\alpha_t)}+\frac{(\boldsymbol{x}<em>{t-1}-\sqrt{\bar{\alpha}</em>{t-1}}\boldsymbol{x}<em>0)^2}{2(1-\bar{\alpha}</em>{t-1})}-\frac{(\boldsymbol{x}_t-\sqrt{\bar{\alpha}_t}\boldsymbol{x}_0)^2}{2(1-\bar{\alpha}_t)}\right]\right} \end{aligned}\end{equation}</p> <p>化简得到：</p> <p>\begin{equation}\mathcal{N}(\boldsymbol{x}<em>{t-1};\underbrace{\frac{\sqrt{\alpha_t}(1-\bar{\alpha}</em>{t-1})\boldsymbol{x}<em>t+\sqrt{\bar{\alpha}</em>{t-1}}(1-\alpha_t)\boldsymbol{x}<em>0}{1-\bar{\alpha}_t}}</em>{\boldsymbol{\mu}<em>q(\boldsymbol{x}_t,\boldsymbol{x}_0)},\underbrace{\frac{(1-\alpha_t)(1-\bar{\alpha}</em>{t-1})}{1-\bar{\alpha}<em>t}\boldsymbol{I}}</em>{\boldsymbol{\sigma}_q(t)})\end{equation}</p> <p>上面的\(\alpha\)要么被视为超参数而设定，要么等待网络进行预测。更改记号将方差记作：</p> <p>\begin{equation}\boldsymbol{\Sigma}<em>q=\boldsymbol{\sigma}^2_q(t)\boldsymbol{I}=\frac{(1-\alpha_t)(1-\bar{\alpha}</em>{t-1})}{1-\bar{\alpha}_t}\boldsymbol{I}\end{equation}</p> <p>两个高斯分布之间的KL散度为：</p> <p>\begin{equation}\begin{aligned} &amp;D_{KL}(\mathcal{N}(\boldsymbol{x};\boldsymbol{\mu}<em>{\boldsymbol{x}},\boldsymbol{\Sigma}</em>{\boldsymbol{x}})\Vert \mathcal{N}(\boldsymbol{y};\boldsymbol{\mu}<em>{\boldsymbol{y}},\boldsymbol{\Sigma}</em>{\boldsymbol{y}})) <br/> =&amp;\frac12{\left[\log\frac{\vert \boldsymbol{\Sigma}_y\vert }{\vert \boldsymbol{\Sigma}_x\vert }+tr(\boldsymbol{\Sigma}_y^{-1}\boldsymbol{\Sigma}_x)+(\boldsymbol{\mu}_y-\boldsymbol{\mu}_x)^\mathrm{T}\boldsymbol{\Sigma}_y^{-1}(\boldsymbol{\mu}_y-\boldsymbol{\mu}_x)-n\right]} \end{aligned}\end{equation}</p> <p>其中\(n\)为\(n\)元高斯分布导致的结果，在我们研究的情况中，可以让两个高斯分布的方差精确匹配，因此，优化kL散度项即最小化两个分布的均值之差：</p> <p>\begin{equation}\begin{aligned} &amp;\arg\min_\theta D_{KL}(q(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t,\boldsymbol{x}_0)\parallel p</em>\theta(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t)) <br/> &amp;=\arg\min</em>\theta\frac12{\left[\log\frac{\vert \boldsymbol{\Sigma}<em>\theta\vert }{\vert \boldsymbol{\Sigma}_q\vert }+tr(\boldsymbol{\Sigma}</em>\theta^{-1}\boldsymbol{\Sigma}<em>q)+(\boldsymbol{\mu}</em>\theta-\boldsymbol{\mu}<em>q)^\mathrm{T}\boldsymbol{\Sigma}</em>\theta^{-1}(\boldsymbol{\mu}<em>\theta-\boldsymbol{\mu}_q)-n\right]} <br/> &amp;=\arg\min</em>\theta\frac12{\left[1+n+(\boldsymbol{\mu}<em>\theta-\boldsymbol{\mu}_q)^\mathrm{T}\boldsymbol{\Sigma}_q^{-1}(\boldsymbol{\mu}</em>\theta-\boldsymbol{\mu}<em>q)-n\right]} <br/> &amp;=\arg\min</em>\theta\frac12{\left[(\boldsymbol{\mu}<em>\theta-\boldsymbol{\mu}_q)^\mathrm{T}(\sigma_q^2(t)\boldsymbol{I})^{-1}(\mu</em>\theta-\mu_q)\right]} <br/> &amp;=\arg\min_\theta\frac1{2\sigma_q^2(t)}{\left[\left\Vert \boldsymbol{\mu}_\theta-\boldsymbol{\mu}_q\right\Vert _2^2\right]} \end{aligned}\end{equation}</p> <p>其中 \(\boldsymbol{\mu}_q(\boldsymbol{x}_t,\boldsymbol{x}_0)\) 在前面已经得到</p> <p>\begin{equation}\boldsymbol{\mu}<em>q(\boldsymbol{x}_t,\boldsymbol{x}_0)=\frac{\sqrt{\alpha_t}(1-\bar{\alpha}</em>{t-1})\boldsymbol{x}<em>t+\sqrt{\bar{\alpha}</em>{t-1}}(1-\alpha_t)\boldsymbol{x}_0}{1-\bar{\alpha}_t}\end{equation}</p> <p>为进一步简化，将\(\boldsymbol{\mu}_\theta(\boldsymbol{x}_t,t)\)也写成类似的形式：</p> <p>\begin{equation}\boldsymbol{\mu}<em>{\boldsymbol{\theta}}(\boldsymbol{x}_t,t)=\frac{\sqrt{\alpha_t}(1-\bar{\alpha}</em>{t-1})\boldsymbol{x}<em>t+\sqrt{\bar{\alpha}</em>{t-1}}(1-\alpha_t)\hat{\boldsymbol{x}}_{\boldsymbol{\theta}}(\boldsymbol{x}_t,t)}{1-\bar{\alpha}_t}\end{equation}</p> <p>\(\hat{\boldsymbol{x}}_{\boldsymbol{\theta}}(\boldsymbol{x}_t,t)\)由一个神经网络参数化：该网络用时间\(t\)，和噪声图像\(\boldsymbol{x}_t\)预测原始图像\(\boldsymbol{x}_0\)。由此，优化问题变为：</p> <p>\begin{equation}\begin{aligned} &amp;\arg\min_\theta D_{KL}(q(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t,\boldsymbol{x}_0)\parallel p</em>\theta(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t)) <br/> =&amp;\arg\min</em>\theta\frac1{2\sigma_q^2(t)}{\left[\left\Vert \boldsymbol{\mu}<em>\theta-\boldsymbol{\mu}_q\right\Vert _2^2\right]} <br/> =&amp;\arg\min</em>\theta\frac1{2\boldsymbol{\sigma}<em>q^2(t)}{\left[\Vert \frac{\sqrt{\bar{\alpha}</em>{t-1}}(1-\alpha_t)}{1-\bar{\alpha}<em>t}(\hat{\boldsymbol{x}}</em>\theta(\boldsymbol{x}<em>t,t)-\boldsymbol{x}_0)\Vert _2^2\right]} <br/> =&amp;\arg\min</em>\theta\frac1{2\boldsymbol{\sigma}<em>q^2(t)}\frac{\bar{\alpha}</em>{t-1}(1-\alpha_t)^2}{(1-\bar{\alpha}<em>t)^2}\biggl[\Vert (\hat{\boldsymbol{x}}</em>\theta(\boldsymbol{x}_t,t)-\boldsymbol{x}_0)\Vert _2^2\biggr] \end{aligned}\end{equation}</p> <h3 id="22-learning-diffusion-noise-parameters">2.2 Learning Diffusion Noise Parameters</h3> <p>我们前面提到，\(\alpha\)除了被设置为超参数建模，还可以通过神经网络建模，但如果将其设为\(\alpha_\eta\)来逐时间步建模，计算量极大，我们可以设计方法简化计算，将\(\sigma_q\)代入：</p> <p>\begin{equation}\begin{aligned} &amp;\frac{1}{2\boldsymbol{\sigma}<em>q^2(t)}\frac{\bar{\alpha}</em>{t-1}(1-\alpha_t)^2}{\left(1-\bar{\alpha}<em>t\right)^2}\left[\Vert (\hat{\boldsymbol{x}}</em>\theta(\boldsymbol{x}<em>t,t)-\boldsymbol{x}_0)\Vert _2^2\right] <br/> =&amp;\frac12\frac{1-\bar{\alpha}_t}{(1-\alpha_t)(1-\bar{\alpha}</em>{t-1})}\frac{\bar{\alpha}<em>{t-1}(1-\alpha_t)^2}{(1-\bar{\alpha}_t)^2}\biggl[\Vert (\hat{\boldsymbol{x}}</em>\theta(\boldsymbol{x}<em>t,t)-\boldsymbol{x}_0)\Vert _2^2\biggr] <br/> =&amp;\frac12\Bigg(\frac{\bar{\alpha}</em>{t-1}}{1-\bar{\alpha}<em>{t-1}}-\frac{\bar{\alpha}_t}{(1-\bar{\alpha}_t)}\Bigg)\Bigg[\Vert (\hat{\boldsymbol{x}}</em>\theta(\boldsymbol{x}_t,t)-\boldsymbol{x}_0)\Vert _2^2\Bigg] \end{aligned}\end{equation}</p> <p>根据信噪比的定义我们有：</p> <p>\begin{equation}\mathrm{SNR}(t)=\frac{\bar{\alpha}_t}{1-\bar{\alpha}_t}\end{equation}</p> <p>代入公式有：</p> <p>\begin{equation}\begin{aligned}&amp;\frac1{2\sigma_q^2(t)}\frac{\bar{\alpha}<em>{t-1}(1-\alpha_t)^2}{(1-\bar{\alpha}_t)^2}\Big[\left\Vert \hat{\boldsymbol{x}}</em>{\boldsymbol{\theta}}(\boldsymbol{x}<em>t,t)-\boldsymbol{x}_0\right\Vert _2^2\Big]\=&amp;\frac12(\mathrm{SNR}(t-1)-\mathrm{SNR}(t))\left[\left\Vert \hat{\boldsymbol{x}}</em>{\boldsymbol{\theta}}(\boldsymbol{x}_t,t)-\boldsymbol{x}_0\right\Vert _2^2\right]\end{aligned}\end{equation}</p> <p>可以使用神经网络在每个时间步上参数化SNR，与扩散模型进行联合学习，由于SNR随时间单调减小，可以表示为：</p> <p>\begin{equation}\mathrm{SNR}(t)=\exp(-\omega_\eta(t))\end{equation}</p> <p>我们可以得到一组美丽的公式：</p> <p>\begin{equation}\begin{aligned} \frac{\bar{\alpha}<em>t}{1-\bar{\alpha}_t}&amp;=\exp(-\omega</em>\eta(t))\\bar{\alpha}<em>t&amp;=\mathrm{sigmoid}(-\omega</em>\eta(t))\1-\bar{\alpha}<em>t&amp;=\mathrm{sigmoid}(\omega</em>\eta(t))<br/> \end{aligned}\end{equation}</p> <h3 id="23-three-equivalent-interpretations">2.3 Three Equivalent Interpretations</h3> <p>\(\boldsymbol{x}_{0}\) 还有两种参数化形式，导向另外两种解释：</p> <p>在重参数化递推的过程中，可以得到：</p> <p>\begin{equation}\boldsymbol{x}_0=\frac{\boldsymbol{x}_t-\sqrt{1-\bar{\alpha}_t}\boldsymbol{\epsilon}}{\sqrt{\bar{\alpha}_t}}\end{equation}</p> <p>代入均值公式：</p> <p>\begin{equation}\begin{gathered} \boldsymbol{\mu}<em>q(\boldsymbol{x}_t,\boldsymbol{x}_0) =\frac{\sqrt{\alpha_t}(1-\bar{\alpha}</em>{t-1})\boldsymbol{x}<em>t+\sqrt{\bar{\alpha}</em>{t-1}}(1-\alpha_t)\boldsymbol{x}_0}{1-\bar{\alpha}_t} <br/> =\frac1{\sqrt{\alpha_t}}\boldsymbol{x}_t-\frac{1-\alpha_t}{\sqrt{1-\bar{\alpha}_t}\sqrt{\alpha_t}}\boldsymbol{\epsilon} \end{gathered}\end{equation}</p> <p>将预测均值也转换成相应形式：</p> <p>\begin{equation}\boldsymbol{\mu}<em>\theta(\boldsymbol{x}_t,t)=\frac1{\sqrt{\alpha_t}}\boldsymbol{x}_t-\frac{1-\alpha_t}{\sqrt{1-\bar{\alpha}_t}\sqrt{\alpha_t}}\hat{\boldsymbol{\epsilon}}</em>{\boldsymbol{\theta}}(\boldsymbol{x}_t,t)\end{equation}</p> <p>相应的优化问题变为：</p> <p>\begin{equation}\begin{aligned} &amp;\arg\min_\theta D_{KL}(q(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t,\boldsymbol{x}_0)\parallel p</em>\theta(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t)) <br/> =&amp;\arg\min</em>\theta\frac1{2\sigma_q^2(t)}{\left[\left\Vert \boldsymbol{\mu}<em>\theta-\boldsymbol{\mu}_q\right\Vert _2^2\right]} <br/> =&amp;\arg\min</em>\theta\frac1{2\sigma_q^2(t)}\frac{(1-\alpha_t)^2}{(1-\bar{\alpha}<em>t)\alpha_t}\Big[\left\Vert (\boldsymbol{\epsilon}-\hat{\boldsymbol{\epsilon}}</em>{\boldsymbol{\theta}}(\boldsymbol{x}_t,t))\right\Vert _2^2\Big] \end{aligned}\end{equation}</p> <p>将学习预测目标从样本转向噪声，从而进一步得到样本，研究表明，这种方法训练结果优于直接得到样本。</p> <p>前面得到 \(q(\boldsymbol{x}_t\vert \boldsymbol{x}_0)=\mathcal{N}(\boldsymbol{x}_t;\sqrt{\bar{\alpha}_t}\boldsymbol{x}_0,(1-\bar{\alpha}_t)\boldsymbol{I})\) ，根据高斯分布和Tweedie 公式的性质：</p> <p>\begin{equation}\mathbb{E}[\boldsymbol{\mu}<em>{\boldsymbol{x}_t}\vert \boldsymbol{x}_t]=\boldsymbol{x}_t+(1-\bar{\alpha}_t)\nabla</em>{\boldsymbol{x}_t}\log p(\boldsymbol{x}_t)\end{equation}</p> <p>因此我们可以将重参数化的式子写为：</p> <p>\begin{equation}\sqrt{\bar{\alpha}<em>t}\boldsymbol{x}_0=\boldsymbol{x}_t+(1-\bar{\alpha}_t)\nabla</em>{\boldsymbol{x}<em>t}\log p(\boldsymbol{x}_t)\\therefore\boldsymbol{x}_0=\frac{\boldsymbol{x}_t+(1-\bar{\alpha}_t)\nabla</em>{\boldsymbol{x}_t}\log p(\boldsymbol{x}_t)}{\sqrt{\bar{\alpha}_t}}\end{equation}</p> <p>再次代入均值公式可以得到：</p> <p>\begin{equation}\begin{aligned} \boldsymbol{\mu}<em>q(\boldsymbol{x}_t,\boldsymbol{x}_0) =&amp;\frac{\sqrt{\alpha_t}(1-\bar{\alpha}</em>{t-1})\boldsymbol{x}<em>t+\sqrt{\bar{\alpha}</em>{t-1}}(1-\alpha_t)\boldsymbol{x}_0}{1-\bar{\alpha}_t} <br/> =&amp; \frac1{\sqrt{\alpha_t}}\boldsymbol{x}_t+\frac{1-\alpha_t}{\sqrt{\alpha_t}}\nabla\log p(\boldsymbol{x}_t) \end{aligned}\end{equation}</p> <p>对应的去噪过程预测均值为：</p> <p>\begin{equation}\boldsymbol{\mu}<em>{\boldsymbol{\theta}}(\boldsymbol{x}_t,t)=\frac1{\sqrt{\alpha_t}}\boldsymbol{x}_t+\frac{1-\alpha_t}{\sqrt{\alpha_t}}s</em>{\boldsymbol{\theta}}(\boldsymbol{x}_t,t)\end{equation}</p> <p>对应的优化问题：</p> <p>\begin{equation}\begin{aligned} &amp;\arg\min_\theta D_{KL}(q(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t,\boldsymbol{x}_0)\parallel p</em>\theta(\boldsymbol{x}<em>{t-1}\vert \boldsymbol{x}_t)) <br/> =&amp;\arg\min</em>\theta\frac1{2\sigma_q^2(t)}{\left[\left\Vert \boldsymbol{\mu}<em>\theta-\boldsymbol{\mu}_q\right\Vert _2^2\right]} <br/> =&amp;\arg\min</em>{\boldsymbol{\theta}}\frac{1}{2\sigma_{q}^{2}(t)}\frac{(1-\alpha_{t})^{2}}{\alpha_{t}}\Big[\left\Vert s_{\boldsymbol{\theta}}(\boldsymbol{x}<em>{t},t)-\nabla\log p(\boldsymbol{x}</em>{t})\right\Vert _{2}^{2}\Big] \end{aligned}\end{equation}</p> <p>对比上面的过程，得到得分与噪声之间的关联：</p> <p>\begin{equation}\nabla_{\boldsymbol{x}_t}\log p(\boldsymbol{x}_t)=-\frac1{\sqrt{1-\bar{\alpha}_t}}\boldsymbol{\epsilon}_0\end{equation}</p> <p>两者之间相差一个随时间变化的常数，得分函数测量了数据流行上如何移动最大化对数概率；由于源噪声被添加，因此反方向会去噪声，从上面的公式可以看出，得分与噪声的相反数之间相差一个正的常数。</p> <p>我们在数学上（并非在计算机实现上）得出了三个等效的优化目标：原始图像，原始噪声，或得分函数。通过随机采样时间步长并使预测结果与真实结果范数最小化，可以进行训练。</p> <h2 id="3-score-based-generative-models">3 Score-based Generative Models</h2> <p>我们得到得分函数只是根据一个数学技巧，目前还没有展示出更深层次的内涵，但出于其与物理学之间的深刻关联，我们相信其有值得思考的内容，对比基于能量的模型：</p> <p>\begin{equation}p_\theta(\boldsymbol{x})=\frac1{z_\theta}e^{-f_\theta(\boldsymbol{x})}\end{equation}</p> <p>但是公式中涉及配分函数，虽然配分函数可以带来很多工具和很好的性质，但是配分函数本身的计算是困难的，对上面的式子取对数后求导得到：</p> <p>\begin{equation}\begin{aligned} \nabla_{\boldsymbol{x}}\log p_{\boldsymbol{\theta}}(\boldsymbol{x})&amp; =\nabla_{\boldsymbol{x}}\log(\frac1{\boldsymbol{z_\theta}}e^{-f_{\boldsymbol{\theta}}(\boldsymbol{x})}) <br/> &amp;=\nabla_x\log\frac1{z_\theta}+\nabla_x\log e^{-f_\theta(\boldsymbol{x})} <br/> &amp;=-\nabla_xf_\theta(\boldsymbol{x}) <br/> &amp;\approx s_\theta(\boldsymbol{x}) \end{aligned}\end{equation}</p> <p>可以很容易被表示为神经网络，并且不需要计算配分函数。很容易想到的一个优化方法：</p> <p>\begin{equation}\mathbb{E}<em>{p(\boldsymbol{x})}\left[\left\Vert s</em>{\boldsymbol{\theta}}(\boldsymbol{x})-\nabla\log p(\boldsymbol{x})\right\Vert _2^2\right]\end{equation}</p> <p>我们现在可以思考得分函数的意义，对于每个\(\boldsymbol{x}\)，取对数似然的梯度，描述了要增加似然度所移动的方向。因此得分函数在整个空间上定义了一个模式（fiber bundle？）的向量场。学习真实系统的得分函数，可以从任意一点开始，通过迭代跟随得分函数，进行演化，直到到达具体的模式，即生成样本，这个采样过程是Langevin动力学：</p> <p>\begin{equation}\boldsymbol{x}_{i+1}=\boldsymbol{x}_i+c\nabla\log p(\boldsymbol{x}_i)+\sqrt{2c}\boldsymbol{\epsilon},\quad i=0,1,\ldots,K\end{equation}</p> <p>其中\(\boldsymbol{x}_0\)是从先验分布采样得到，\(\boldsymbol{\epsilon}\)是额外的噪声项，确保生成结果不总是塌陷到一个模式上，确保结果的多样性。并且，得分函数是确定的，噪声可以使生成过程随机性增强。</p> <p>上面的目标函数依赖真实的得分函数，对于模拟复杂图像分布等复杂情况而言，真实得分无法得到。但我们可以使用得分匹配技术作为替代方案，在不知道得分的情况下最小化Fisher散度，并使用随机梯度下降优化。</p> <p>通过得分函数学习分布，并使用Langevin动力学生成样本，被称为基于得分的生成模型。得分匹配的三个问题主要是：</p> <p>首先，出于高维空间中的低维流形时，得分函数未定义，在数学上，不在低维流形上概率为0，对数无定义。这在尝试学习自然图像的生成建模时很困难。</p> <p>其次，通过普通得分匹配训练的估计得分函数在低密度区不准确，它是对\(p\)的期望，并且在其样本上进行训练，模型在未见或少见样本上无法准确学习信号。我们的采样策略涉及从高维空间的随机位置开始，这个位置很可能是随机噪声，并且根据学习的得分函数进行移动。如果遵循不准确的得分估计，最终生成的样本也不够优化，或者需要经过更多的迭代，才能得到结果。</p> <p>最后，即使使用真实的得分进行Langevin动力学采样，也可能无法混合。假设真实分布是不想交的分布的混合：</p> <p>\begin{equation}p(\boldsymbol{x})=c_1p_1(\boldsymbol x)+c_2p_2(\boldsymbol x)\end{equation}</p> <p>在计算得分时，这些混合系数会丢失，因为对数运算将系数从分布中分离出来，并在经过梯度计算后变为0。</p> <p>可以通过向数据添加多层高斯噪声来同时解决这三个缺点。</p> <p>首先高斯噪声分布支持整个空间，扰动后的数据不再限于低维流形上。</p> <p>其次，大量的高斯噪声会增加每个模式在数据分布的覆盖范围，在低密度区增加更多的训练信号。</p> <p>最后，通过添加方差递增的多层高斯噪声，可以得到对应于真实混合系数的中间分布。</p> <p>形式上，可以选择一个噪声水平为\(\{\sigma_t\}_{t=1}^T\)的正序列，并定义一个渐进扰动数据分布序列：</p> <p>\begin{equation}p_{\boldsymbol{\sigma}_t}(\boldsymbol{x}_t)=\int p(\boldsymbol{x})\mathcal{N}(\boldsymbol{x}_t;\boldsymbol{x},\boldsymbol{\sigma}_t^2\boldsymbol{I})dx\end{equation}</p> <p>然后，使用得分匹配学习神经网络\(s_{\theta}(\boldsymbol{x},t)\) ，以同时学习所有噪声水平的得分函数：</p> <p>\begin{equation}\arg\min_{\boldsymbol{\theta}}\sum_{t=1}^T\lambda(t)\mathbb{E}<em>{p</em>{\boldsymbol{\sigma}<em>t}(\boldsymbol{x})}\left\lfloor\left\Vert s</em>{\boldsymbol{\theta}}(\boldsymbol{x})-\nabla\log p_{\boldsymbol{\sigma}_t}(\boldsymbol{x})\right\Vert _2^2\right\rfloor \end{equation}</p> <p>其中，\(\lambda(t)\) 为对噪声水平添加条件的正权重函数。这个目标与VDM训练公式推导出的目标相匹配。</p> <p>此外，可以使用退火Langevin动力学采样生成，样本是按顺序在每个\(t=T,T-1,\cdots,2,1\)上运行朗之万动力学来生成的。初始化是从某固定先验中选择的，并且后续的采样都从前一个仿真的最终样本开始。由于随时间步长减小，噪声水平下降，我们逐渐减小步长，样本会逐渐收敛到真实的模式下，这也和VDM采样过程有所关联。在训练目标和采样过程上VDM和基于得分的模型之间都有明确的联系。</p> <p>一个很自然的想法，是研究理想情况下，也就是无限数量的时间步骤情况下的情况，在VDM视角下，可以视为将层数扩展到无穷大，从基于得分的观点看可以使用随机过程方法，用随机微分方程（SDE）来描述。采样通过求解反向SDE进行，自然要求在每个连续值的噪声水平估计得分。SDE不同参数表示随时间的不同扰动，可以实现对噪声的灵活建模。</p> <h2 id="4-guidence">4 Guidence</h2> <p>到目前为止，只研究了数据本身的分布\(p(\boldsymbol{x})\)，但在很多场景下，需要条件分布\(p(\boldsymbol{x}|y)\)我们可以通过条件信息\(y\)来控制数据生成，一种很自然的想法是将条件信息和每个时间步的信息一起添加：</p> <table> <tbody> <tr> <td>\begin{equation}p(\boldsymbol{x}<em>{0:T})=p(\boldsymbol{x}_T)\prod</em>{t=1}^Tp_{\boldsymbol{\theta}}(\boldsymbol{x}_{t-1}</td> <td>\boldsymbol{x}_t)\end{equation}</td> </tr> </tbody> </table> <p>很自然，我们可以得到：</p> <table> <tbody> <tr> <td>\begin{equation}p(\boldsymbol{x}_{0:T}</td> <td>y)=p(\boldsymbol{x}<em>T)\prod</em>{t=1}^Tp_{\boldsymbol{\theta}}(\boldsymbol{x}_{t-1}</td> <td>\boldsymbol{x}_t,y)\end{equation}</td> </tr> </tbody> </table> <table> <tbody> <tr> <td>例如，图像-文本问题上，\(y\)可以是文本编码等，因此可以通过 \(\hat{\boldsymbol{x}}_\theta(\boldsymbol{x}_t,t,y)\approx\boldsymbol{x}_0, \hat{\boldsymbol{\epsilon}}_\theta(\boldsymbol{x}_t,t,y)\approx\boldsymbol{\epsilon}_0\) 或者 $$s_\theta(\boldsymbol{x}_t,t,y)\approx\nabla\log p(\boldsymbol{x}_t</td> <td>y)$$ 的每个所需解释和实现，来学习VDM的核心神经网络。</td> </tr> </tbody> </table> <p>但过程中需要注意，这种方法训练的模型可能会忽略或淡化给定条件，但如果更明确控制模型赋予条件信息权重，会导致生成样本多样性减少。目前常用的是分类器指导和无分类器指导两种形式。</p> <h3 id="41-classifier-guidance">4.1 Classifier Guidance</h3> <table> <tbody> <tr> <td>基于得分的模型目标是学习任意噪声水平\(t\)下的得分函数：$$\nabla\log p(\boldsymbol{x}_t</td> <td>y)$$，很自然的根据贝叶斯法则：</td> </tr> </tbody> </table> <p>\begin{equation}\begin{aligned} \nabla\log p(\boldsymbol{x}<em>t|y)&amp; =\nabla\log\left(\frac{p(\boldsymbol{x}_t)p(y|\boldsymbol{x}_t)}{p(y)}\right) <br/> &amp;=\nabla\log p(\boldsymbol{x}_t)+\nabla\log p(y|\boldsymbol{x}_t)-\nabla\log p(y) <br/> &amp;=\underbrace{\nabla\log p(\boldsymbol{x}_t)}</em>{\text{无条件得分}}+\underbrace{\nabla\log p(y|\boldsymbol{x}<em>t)}</em>{\text{对抗梯度}} \end{aligned}\end{equation}</p> <p>因此，分类器指导的方法，需要先学习一个无分类器的扩散模型得分，之后再学习分类器，这个分类器接受任意噪声输入\(\boldsymbol{x}_{t}\)，并预测条件信息\(y\)。采样过程中用于退火Langevin动力学的整体条件得分函数被计算为无条件得分函数和噪声分类器的对抗梯度之和。为了引入细粒化控制，用来鼓励或者阻止模型考虑条件信息，引入超参数\(\gamma\)用以调节噪声分类器的对抗梯度。</p> <table> <tbody> <tr> <td>\begin{equation}\nabla\log p(\boldsymbol{x}_t</td> <td>y)=\nabla\log p(\boldsymbol{x}_t)+\gamma\nabla\log p(y</td> <td>\boldsymbol{x}_t)\end{equation}</td> </tr> </tbody> </table> <p>可以通过超参数调节生成模型的条件重要性和样本多样性，分类器指导的显著问题是依赖单独学习的分类器，由于分类器必须处理任意噪声输入，而大多数现有的预训练分类模型不针对这个问题进行优化，因此需要和扩散模型同时进行专门学习。</p> <h3 id="42-classifier-free-guidance">4.2 Classifier-Free Guidance</h3> <p>无分类器指导的模型，不需要训练一个单独的分类器模型，使用无条件扩散和条件扩散。重新组合之前的公式：</p> <table> <tbody> <tr> <td>\begin{equation}\nabla\log p(y</td> <td>\boldsymbol{x}_t)=\nabla\log p(\boldsymbol{x}_t</td> <td>y)-\nabla\log p(\boldsymbol{x}_t)\begin{equation}</td> </tr> </tbody> </table> <p>再代入存在超参数的公式：</p> <p>\begin{equation}\begin{gathered} \nabla\log p(\boldsymbol{x}<em>t|y) =\nabla\log p(\boldsymbol{x}_t)+\gamma(\nabla\log p(\boldsymbol{x}_t|y)-\nabla\log p(\boldsymbol{x}_t)) <br/> =\underbrace{\gamma\nabla\log p(\boldsymbol{x}_t|y)}</em>{\text{条件得分}}+\underbrace{(1-\gamma)\nabla\log p(\boldsymbol{x}<em>t)}</em>{\text{无条件得分}} \end{gathered}\end{equation}</p> <p>\(\gamma\)是控制学习到的模型对条件信息关注程度的参数，\(\gamma=0\)时完全忽略条件，\(\gamma=1\)时模型学习无指导的基本条件分布，\(\gamma&gt;1\)时，扩散模型不仅有限考虑条件得分函数，还朝着远离无条件得分函数的方向移动，即减小生成无条件信息的样本的概率。</p> <p>由于同时学习两个模型成本较高，因此可以将条件模型和无条件模型一起作为一个单独的条件模型学习，无条件信息可以将条件信息固定为固定常数，例如0来学习。这本质上是对条件信息执行随机丢弃</p>]]></content><author><name></name></author><category term="machine-learning"/><category term="diffusion-model"/><summary type="html"><![CDATA[扩散模型入门，包括DDPM和SLDM]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://lfcdepression.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">a post with tabs</title><link href="https://lfcdepression.github.io/blog/2024/tabs/" rel="alternate" type="text/html" title="a post with tabs"/><published>2024-05-01T00:32:13+00:00</published><updated>2024-05-01T00:32:13+00:00</updated><id>https://lfcdepression.github.io/blog/2024/tabs</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/tabs/"><![CDATA[<p>This is how a post with <a href="https://github.com/Ovski4/jekyll-tabs">tabs</a> looks like. Note that the tabs could be used for different purposes, not only for code.</p> <h2 id="first-tabs">First tabs</h2> <p>To add tabs, use the following syntax:</p> <div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">{%</span><span class="w"> </span><span class="nt">tabs</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-1</span><span class="w"> </span><span class="cp">%}</span>

Content 1

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">tab</span><span class="w"> </span><span class="nv">group-name</span><span class="w"> </span><span class="nv">tab-name-2</span><span class="w"> </span><span class="cp">%}</span>

Content 2

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtab</span><span class="w"> </span><span class="cp">%}</span>

<span class="cp">{%</span><span class="w"> </span><span class="nt">endtabs</span><span class="w"> </span><span class="cp">%}</span>
</code></pre></div></div> <p>With this you can generate visualizations like:</p> <ul id="log" class="tab" data-tab="582e9097-eb30-4a67-abba-9ff35f69610d" data-name="log"> <li class="active" id="log-php"> <a href="#">php </a> </li> <li id="log-js"> <a href="#">js </a> </li> <li id="log-ruby"> <a href="#">ruby </a> </li> </ul> <ul class="tab-content" id="582e9097-eb30-4a67-abba-9ff35f69610d" data-name="log"> <li class="active"> <div class="language-php highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">var_dump</span><span class="p">(</span><span class="s1">'hello'</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">console</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">hello</span><span class="dl">"</span><span class="p">);</span>
</code></pre></div></div> </li> <li> <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">pputs</span> <span class="dl">'</span><span class="s1">hello</span><span class="dl">'</span>
</code></pre></div></div> </li> </ul> <h2 id="another-example">Another example</h2> <ul id="data-struct" class="tab" data-tab="73b84d68-d1cc-4e4f-bb28-8a282020c048" data-name="data-struct"> <li class="active" id="data-struct-yaml"> <a href="#">yaml </a> </li> <li id="data-struct-json"> <a href="#">json </a> </li> </ul> <ul class="tab-content" id="73b84d68-d1cc-4e4f-bb28-8a282020c048" data-name="data-struct"> <li class="active"> <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">hello</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">whatsup"</span>
  <span class="pi">-</span> <span class="s2">"</span><span class="s">hi"</span>
</code></pre></div></div> </li> <li> <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"hello"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"whatsup"</span><span class="p">,</span><span class="w"> </span><span class="s2">"hi"</span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div> </li> </ul> <h2 id="tabs-for-something-else">Tabs for something else</h2> <ul id="something-else" class="tab" data-tab="ba12abff-9ae7-4803-ac4b-26900fd59122" data-name="something-else"> <li class="active" id="something-else-text"> <a href="#">text </a> </li> <li id="something-else-quote"> <a href="#">quote </a> </li> <li id="something-else-list"> <a href="#">list </a> </li> </ul> <ul class="tab-content" id="ba12abff-9ae7-4803-ac4b-26900fd59122" data-name="something-else"> <li class="active"> <p>Regular text</p> </li> <li> <blockquote> <p>A quote</p> </blockquote> </li> <li> <p>Hipster list</p> <ul> <li>brunch</li> <li>fixie</li> <li>raybans</li> <li>messenger bag</li> </ul> </li> </ul>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included tabs in a post could look like]]></summary></entry><entry><title type="html">a post with typograms</title><link href="https://lfcdepression.github.io/blog/2024/typograms/" rel="alternate" type="text/html" title="a post with typograms"/><published>2024-04-29T23:36:10+00:00</published><updated>2024-04-29T23:36:10+00:00</updated><id>https://lfcdepression.github.io/blog/2024/typograms</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/typograms/"><![CDATA[<p>This is an example post with some <a href="https://github.com/google/typograms/">typograms</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">+----+
|    |---&gt; My first diagram!
+----+</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-typograms">+----+
|    |---&gt; My first diagram!
+----+
</code></pre> <p>Another example:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">typograms
</span><span class="sb">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.</span>
<span class="p">```</span>
</code></pre></div></div> <p>which generates:</p> <pre><code class="language-typograms">.------------------------.
|.----------------------.|
||"https://example.com" ||
|'----------------------'|
| ______________________ |
||                      ||
||   Welcome!           ||
||                      ||
||                      ||
||  .----------------.  ||
||  | username       |  ||
||  '----------------'  ||
||  .----------------.  ||
||  |"*******"       |  ||
||  '----------------'  ||
||                      ||
||  .----------------.  ||
||  |   "Sign-up"    |  ||
||  '----------------'  ||
||                      ||
|+----------------------+|
.------------------------.
</code></pre> <p>For more examples, check out the <a href="https://google.github.io/typograms/#examples">typograms documentation</a>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[this is what included typograms code could look like]]></summary></entry><entry><title type="html">a post that can be cited</title><link href="https://lfcdepression.github.io/blog/2024/post-citation/" rel="alternate" type="text/html" title="a post that can be cited"/><published>2024-04-28T15:06:00+00:00</published><updated>2024-04-28T15:06:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/post-citation</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/post-citation/"><![CDATA[<p>This is an example post that can be cited. The content of the post ends here, while the citation information is automatically provided below. The only thing needed is for you to set the <code class="language-plaintext highlighter-rouge">citation</code> key in the front matter to <code class="language-plaintext highlighter-rouge">true</code>.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="citation"/><summary type="html"><![CDATA[this is what a post that can be cited looks like]]></summary></entry><entry><title type="html">a post with pseudo code</title><link href="https://lfcdepression.github.io/blog/2024/pseudocode/" rel="alternate" type="text/html" title="a post with pseudo code"/><published>2024-04-15T00:01:00+00:00</published><updated>2024-04-15T00:01:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/pseudocode</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/pseudocode/"><![CDATA[<p>This is an example post with some pseudo code rendered by <a href="https://github.com/SaswatPadhi/pseudocode.js">pseudocode</a>. The example presented here is the same as the one in the <a href="https://saswat.padhi.me/pseudocode.js/">pseudocode.js</a> documentation, with only one simple but important change: everytime you would use <code class="language-plaintext highlighter-rouge">$</code>, you should use <code class="language-plaintext highlighter-rouge">$$</code> instead. Also, note that the <code class="language-plaintext highlighter-rouge">pseudocode</code> key in the front matter is set to <code class="language-plaintext highlighter-rouge">true</code> to enable the rendering of pseudo code. As an example, using this code:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">pseudocode
</span><span class="sb">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Generates:</p> <pre><code class="language-pseudocode">% This quicksort algorithm is extracted from Chapter 7, Introduction to Algorithms (3rd edition)
\begin{algorithm}
\caption{Quicksort}
\begin{algorithmic}
\PROCEDURE{Quicksort}{$$A, p, r$$}
    \IF{$$p &lt; r$$}
        \STATE $$q = $$ \CALL{Partition}{$$A, p, r$$}
        \STATE \CALL{Quicksort}{$$A, p, q - 1$$}
        \STATE \CALL{Quicksort}{$$A, q + 1, r$$}
    \ENDIF
\ENDPROCEDURE
\PROCEDURE{Partition}{$$A, p, r$$}
    \STATE $$x = A[r]$$
    \STATE $$i = p - 1$$
    \FOR{$$j = p$$ \TO $$r - 1$$}
        \IF{$$A[j] &lt; x$$}
            \STATE $$i = i + 1$$
            \STATE exchange
            $$A[i]$$ with $$A[j]$$
        \ENDIF
        \STATE exchange $$A[i]$$ with $$A[r]$$
    \ENDFOR
\ENDPROCEDURE
\end{algorithmic}
\end{algorithm}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is what included pseudo code could look like]]></summary></entry><entry><title type="html">a post with code diff</title><link href="https://lfcdepression.github.io/blog/2024/code-diff/" rel="alternate" type="text/html" title="a post with code diff"/><published>2024-01-27T19:22:00+00:00</published><updated>2024-01-27T19:22:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/code-diff</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/code-diff/"><![CDATA[<p>You can display diff code by using the regular markdown syntax:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff
</span><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gh">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
</span><span class="gd">--- a/sample.js
</span><span class="gi">+++ b/sample.js
</span><span class="p">@@ -1 +1 @@</span>
<span class="gd">-console.log("Hello World!")
</span><span class="gi">+console.log("Hello from Diff2Html!")
</span></code></pre></div></div> <p>But this is difficult to read, specially if you have a large diff. You can use <a href="https://diff2html.xyz/">diff2html</a> to display a more readable version of the diff. For this, just use <code class="language-plaintext highlighter-rouge">diff2html</code> instead of <code class="language-plaintext highlighter-rouge">diff</code> for the code block language:</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">diff2html
</span><span class="sb">diff --git a/sample.js b/sample.js
index 0000001..0ddf2ba
--- a/sample.js
+++ b/sample.js
@@ -1 +1 @@
-console.log("Hello World!")
+console.log("Hello from Diff2Html!")</span>
<span class="p">```</span>
</code></pre></div></div> <p>If we use a longer example, for example <a href="https://github.com/rtfpessoa/diff2html/commit/c2c253d3e3f8b8b267f551e659f72b44ca2ac927">this commit from diff2html</a>, it will generate the following output:</p> <pre><code class="language-diff2html">From 2aaae31cc2a37bfff83430c2c914b140bee59b6a Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sun, 9 Oct 2016 16:41:54 +0100
Subject: [PATCH 1/2] Initial template override support

---
 scripts/hulk.js                    |  4 ++--
 src/diff2html.js                   |  3 +--
 src/file-list-printer.js           | 11 ++++++++---
 src/hoganjs-utils.js               | 29 +++++++++++++++++------------
 src/html-printer.js                |  6 ++++++
 src/line-by-line-printer.js        |  6 +++++-
 src/side-by-side-printer.js        |  6 +++++-
 test/file-list-printer-tests.js    |  2 +-
 test/hogan-cache-tests.js          | 18 +++++++++++++++---
 test/line-by-line-tests.js         |  3 +--
 test/side-by-side-printer-tests.js |  3 +--
 11 files changed, 62 insertions(+), 29 deletions(-)

diff --git a/scripts/hulk.js b/scripts/hulk.js
index 5a793c18..a4b1a4d5 100755
--- a/scripts/hulk.js
+++ b/scripts/hulk.js
@@ -173,11 +173,11 @@ function namespace(name) {
 // write a template foreach file that matches template extension
 templates = extractFiles(options.argv.remain)
   .map(function(file) {
-    var openedFile = fs.readFileSync(file, 'utf-8');
+    var openedFile = fs.readFileSync(file, 'utf-8').trim();
     var name;
     if (!openedFile) return;
     name = namespace(path.basename(file).replace(/\..*$/, ''));
-    openedFile = removeByteOrderMark(openedFile.trim());
+    openedFile = removeByteOrderMark(openedFile);
     openedFile = wrap(file, name, openedFile);
     if (!options.outputdir) return openedFile;
     fs.writeFileSync(path.join(options.outputdir, name + '.js')
diff --git a/src/diff2html.js b/src/diff2html.js
index 21b0119e..64e138f5 100644
--- a/src/diff2html.js
+++ b/src/diff2html.js
@@ -7,7 +7,6 @@

 (function() {
   var diffParser = require('./diff-parser.js').DiffParser;
-  var fileLister = require('./file-list-printer.js').FileListPrinter;
   var htmlPrinter = require('./html-printer.js').HtmlPrinter;

   function Diff2Html() {
@@ -43,7 +42,7 @@

     var fileList = '';
     if (configOrEmpty.showFiles === true) {
-      fileList = fileLister.generateFileList(diffJson, configOrEmpty);
+      fileList = htmlPrinter.generateFileListSummary(diffJson, configOrEmpty);
     }

     var diffOutput = '';
diff --git a/src/file-list-printer.js b/src/file-list-printer.js
index e408d9b2..1e0a2c61 100644
--- a/src/file-list-printer.js
+++ b/src/file-list-printer.js
@@ -8,11 +8,16 @@
 (function() {
   var printerUtils = require('./printer-utils.js').PrinterUtils;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var baseTemplatesPath = 'file-summary';
   var iconsBaseTemplatesPath = 'icon';

-  function FileListPrinter() {
+  function FileListPrinter(config) {
+    this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   FileListPrinter.prototype.generateFileList = function(diffFiles) {
@@ -38,5 +43,5 @@
     });
   };

-  module.exports.FileListPrinter = new FileListPrinter();
+  module.exports.FileListPrinter = FileListPrinter;
 })();
diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 9949e5fa..0dda08d7 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -8,18 +8,19 @@
 (function() {
   var fs = require('fs');
   var path = require('path');
-
   var hogan = require('hogan.js');

   var hoganTemplates = require('./templates/diff2html-templates.js');

-  var templatesPath = path.resolve(__dirname, 'templates');
+  var extraTemplates;

-  function HoganJsUtils() {
+  function HoganJsUtils(configuration) {
+    this.config = configuration || {};
+    extraTemplates = this.config.templates || {};
   }

-  HoganJsUtils.prototype.render = function(namespace, view, params, configuration) {
-    var template = this.template(namespace, view, configuration);
+  HoganJsUtils.prototype.render = function(namespace, view, params) {
+    var template = this.template(namespace, view);
     if (template) {
       return template.render(params);
     }
@@ -27,17 +28,16 @@
     return null;
   };

-  HoganJsUtils.prototype.template = function(namespace, view, configuration) {
-    var config = configuration || {};
+  HoganJsUtils.prototype.template = function(namespace, view) {
     var templateKey = this._templateKey(namespace, view);

-    return this._getTemplate(templateKey, config);
+    return this._getTemplate(templateKey);
   };

-  HoganJsUtils.prototype._getTemplate = function(templateKey, config) {
+  HoganJsUtils.prototype._getTemplate = function(templateKey) {
     var template;

-    if (!config.noCache) {
+    if (!this.config.noCache) {
       template = this._readFromCache(templateKey);
     }

@@ -53,6 +53,7 @@

     try {
       if (fs.readFileSync) {
+        var templatesPath = path.resolve(__dirname, 'templates');
         var templatePath = path.join(templatesPath, templateKey);
         var templateContent = fs.readFileSync(templatePath + '.mustache', 'utf8');
         template = hogan.compile(templateContent);
@@ -66,12 +67,16 @@
   };

   HoganJsUtils.prototype._readFromCache = function(templateKey) {
-    return hoganTemplates[templateKey];
+    return extraTemplates[templateKey] || hoganTemplates[templateKey];
   };

   HoganJsUtils.prototype._templateKey = function(namespace, view) {
     return namespace + '-' + view;
   };

-  module.exports.HoganJsUtils = new HoganJsUtils();
+  HoganJsUtils.prototype.compile = function(templateStr) {
+    return hogan.compile(templateStr);
+  };
+
+  module.exports.HoganJsUtils = HoganJsUtils;
 })();
diff --git a/src/html-printer.js b/src/html-printer.js
index 585d5b66..13f83047 100644
--- a/src/html-printer.js
+++ b/src/html-printer.js
@@ -8,6 +8,7 @@
 (function() {
   var LineByLinePrinter = require('./line-by-line-printer.js').LineByLinePrinter;
   var SideBySidePrinter = require('./side-by-side-printer.js').SideBySidePrinter;
+  var FileListPrinter = require('./file-list-printer.js').FileListPrinter;

   function HtmlPrinter() {
   }
@@ -22,5 +23,10 @@
     return sideBySidePrinter.generateSideBySideJsonHtml(diffFiles);
   };

+  HtmlPrinter.prototype.generateFileListSummary = function(diffJson, config) {
+    var fileListPrinter = new FileListPrinter(config);
+    return fileListPrinter.generateFileList(diffJson);
+  };
+
   module.exports.HtmlPrinter = new HtmlPrinter();
 })();
diff --git a/src/line-by-line-printer.js b/src/line-by-line-printer.js
index b07eb53c..d230bedd 100644
--- a/src/line-by-line-printer.js
+++ b/src/line-by-line-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'line-by-line';
   var iconsBaseTemplatesPath = 'icon';
@@ -19,6 +20,9 @@

   function LineByLinePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   LineByLinePrinter.prototype.makeFileDiffHtml = function(file, diffs) {
diff --git a/src/side-by-side-printer.js b/src/side-by-side-printer.js
index bbf1dc8d..5e3033b3 100644
--- a/src/side-by-side-printer.js
+++ b/src/side-by-side-printer.js
@@ -11,7 +11,8 @@
   var utils = require('./utils.js').Utils;
   var Rematch = require('./rematch.js').Rematch;

-  var hoganUtils = require('./hoganjs-utils.js').HoganJsUtils;
+  var hoganUtils;
+
   var genericTemplatesPath = 'generic';
   var baseTemplatesPath = 'side-by-side';
   var iconsBaseTemplatesPath = 'icon';
@@ -26,6 +27,9 @@

   function SideBySidePrinter(config) {
     this.config = config;
+
+    var HoganJsUtils = require('./hoganjs-utils.js').HoganJsUtils;
+    hoganUtils = new HoganJsUtils(config);
   }

   SideBySidePrinter.prototype.makeDiffHtml = function(file, diffs) {
diff --git a/test/file-list-printer-tests.js b/test/file-list-printer-tests.js
index a502a46f..60ea3208 100644
--- a/test/file-list-printer-tests.js
+++ b/test/file-list-printer-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var fileListPrinter = require('../src/file-list-printer.js').FileListPrinter;
+var fileListPrinter = new (require('../src/file-list-printer.js').FileListPrinter)();

 describe('FileListPrinter', function() {
   describe('generateFileList', function() {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 190bf6f8..3bb754ac 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -1,6 +1,6 @@
 var assert = require('assert');

-var HoganJsUtils = require('../src/hoganjs-utils.js').HoganJsUtils;
+var HoganJsUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)();
 var diffParser = require('../src/diff-parser.js').DiffParser;

 describe('HoganJsUtils', function() {
@@ -21,16 +21,28 @@ describe('HoganJsUtils', function() {
       });
       assert.equal(emptyDiffHtml, result);
     });
+
     it('should render view without cache', function() {
       var result = HoganJsUtils.render('generic', 'empty-diff', {
         contentClass: 'd2h-code-line',
         diffParser: diffParser
       }, {noCache: true});
-      assert.equal(emptyDiffHtml + '\n', result);
+      assert.equal(emptyDiffHtml, result);
     });
+
     it('should return null if template is missing', function() {
-      var result = HoganJsUtils.render('generic', 'missing-template', {}, {noCache: true});
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)({noCache: true});
+      var result = hoganUtils.render('generic', 'missing-template', {});
       assert.equal(null, result);
     });
+
+    it('should allow templates to be overridden', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+
+      var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
diff --git a/test/line-by-line-tests.js b/test/line-by-line-tests.js
index 1cd92073..8869b3df 100644
--- a/test/line-by-line-tests.js
+++ b/test/line-by-line-tests.js
@@ -14,7 +14,7 @@ describe('LineByLinePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expected, fileHtml);
     });
@@ -422,7 +422,6 @@ describe('LineByLinePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                &lt;/tbody&gt;\n' +
         '            &lt;/table&gt;\n' +
         '        &lt;/div&gt;\n' +
diff --git a/test/side-by-side-printer-tests.js b/test/side-by-side-printer-tests.js
index 76625f8e..771daaa5 100644
--- a/test/side-by-side-printer-tests.js
+++ b/test/side-by-side-printer-tests.js
@@ -14,7 +14,7 @@ describe('SideBySidePrinter', function() {
         '            File without changes\n' +
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
-        '&lt;/tr&gt;\n';
+        '&lt;/tr&gt;';

       assert.equal(expectedRight, fileHtml.right);
       assert.equal(expectedLeft, fileHtml.left);
@@ -324,7 +324,6 @@ describe('SideBySidePrinter', function() {
         '        &lt;/div&gt;\n' +
         '    &lt;/td&gt;\n' +
         '&lt;/tr&gt;\n' +
-        '\n' +
         '                    &lt;/tbody&gt;\n' +
         '                &lt;/table&gt;\n' +
         '            &lt;/div&gt;\n' +

From f3cadb96677d0eb82fc2752dc3ffbf35ca9b5bdb Mon Sep 17 00:00:00 2001
From: Rodrigo Fernandes &lt;rtfrodrigo@gmail.com&gt;
Date: Sat, 15 Oct 2016 13:21:22 +0100
Subject: [PATCH 2/2] Allow uncompiled templates

---
 README.md                 |  3 +++
 src/hoganjs-utils.js      |  7 +++++++
 test/hogan-cache-tests.js | 24 +++++++++++++++++++++++-
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/README.md b/README.md
index 132c8a28..46909f25 100644
--- a/README.md
+++ b/README.md
@@ -98,6 +98,9 @@ The HTML output accepts a Javascript object with configuration. Possible options
   - `synchronisedScroll`: scroll both panes in side-by-side mode: `true` or `false`, default is `false`
   - `matchWordsThreshold`: similarity threshold for word matching, default is 0.25
   - `matchingMaxComparisons`: perform at most this much comparisons for line matching a block of changes, default is `2500`
+  - `templates`: object with previously compiled templates to replace parts of the html
+  - `rawTemplates`: object with raw not compiled templates to replace parts of the html
+  &gt; For more information regarding the possible templates look into [src/templates](https://github.com/rtfpessoa/diff2html/tree/master/src/templates)

 ## Diff2HtmlUI Helper

diff --git a/src/hoganjs-utils.js b/src/hoganjs-utils.js
index 0dda08d7..b2e9c275 100644
--- a/src/hoganjs-utils.js
+++ b/src/hoganjs-utils.js
@@ -17,6 +17,13 @@
   function HoganJsUtils(configuration) {
     this.config = configuration || {};
     extraTemplates = this.config.templates || {};
+
+    var rawTemplates = this.config.rawTemplates || {};
+    for (var templateName in rawTemplates) {
+      if (rawTemplates.hasOwnProperty(templateName)) {
+        if (!extraTemplates[templateName]) extraTemplates[templateName] = this.compile(rawTemplates[templateName]);
+      }
+    }
   }

   HoganJsUtils.prototype.render = function(namespace, view, params) {
diff --git a/test/hogan-cache-tests.js b/test/hogan-cache-tests.js
index 3bb754ac..a34839c0 100644
--- a/test/hogan-cache-tests.js
+++ b/test/hogan-cache-tests.js
@@ -36,7 +36,7 @@ describe('HoganJsUtils', function() {
       assert.equal(null, result);
     });

-    it('should allow templates to be overridden', function() {
+    it('should allow templates to be overridden with compiled templates', function() {
       var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');

       var config = {templates: {'generic-empty-diff': emptyDiffTemplate}};
@@ -44,5 +44,27 @@ describe('HoganJsUtils', function() {
       var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
       assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
     });
+
+    it('should allow templates to be overridden with uncompiled templates', function() {
+      var emptyDiffTemplate = '&lt;p&gt;&lt;/p&gt;';
+
+      var config = {rawTemplates: {'generic-empty-diff': emptyDiffTemplate}};
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
+
+    it('should allow templates to be overridden giving priority to compiled templates', function() {
+      var emptyDiffTemplate = HoganJsUtils.compile('&lt;p&gt;&lt;/p&gt;');
+      var emptyDiffTemplateUncompiled = '&lt;p&gt;Not used!&lt;/p&gt;';
+
+      var config = {
+        templates: {'generic-empty-diff': emptyDiffTemplate},
+        rawTemplates: {'generic-empty-diff': emptyDiffTemplateUncompiled}
+      };
+      var hoganUtils = new (require('../src/hoganjs-utils.js').HoganJsUtils)(config);
+      var result = hoganUtils.render('generic', 'empty-diff', {myName: 'Rodrigo Fernandes'});
+      assert.equal('&lt;p&gt;Rodrigo Fernandes&lt;/p&gt;', result);
+    });
   });
 });
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="code"/><summary type="html"><![CDATA[this is how you can display code diffs]]></summary></entry><entry><title type="html">a post with advanced image components</title><link href="https://lfcdepression.github.io/blog/2024/advanced-images/" rel="alternate" type="text/html" title="a post with advanced image components"/><published>2024-01-27T11:46:00+00:00</published><updated>2024-01-27T11:46:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/advanced-images</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/advanced-images/"><![CDATA[<p>This is an example post with advanced image components.</p> <h2 id="image-slider">Image Slider</h2> <p>This is a simple image slider. It uses the <a href="https://swiperjs.com/">Swiper</a> library. Check the <a href="https://swiperjs.com/demos">examples page</a> for more information of what you can achieve with it.</p> <swiper-container keyboard="true" navigation="true" pagination="true" pagination-clickable="true" pagination-dynamic-bullets="true" rewind="true"> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/9.jpg" sizes="95vw"/> <img src="/assets/img/9.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/7.jpg" sizes="95vw"/> <img src="/assets/img/7.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/8.jpg" sizes="95vw"/> <img src="/assets/img/8.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/10.jpg" sizes="95vw"/> <img src="/assets/img/10.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> <swiper-slide> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/12.jpg" sizes="95vw"/> <img src="/assets/img/12.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </swiper-slide> </swiper-container> <h2 id="image-comparison-slider">Image Comparison Slider</h2> <p>This is a simple image comparison slider. It uses the <a href="https://img-comparison-slider.sneas.io/">img-comparison-slider</a> library. Check the <a href="https://img-comparison-slider.sneas.io/examples.html">examples page</a> for more information of what you can achieve with it.</p> <img-comparison-slider> <figure slot="first"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic.jpg" sizes="95vw"/> <img src="/assets/img/prof_pic.jpg" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <figure slot="second"> <picture> <source class="responsive-img-srcset" srcset="/assets/img/prof_pic_color.png" sizes="95vw"/> <img src="/assets/img/prof_pic_color.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="lazy" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </img-comparison-slider>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="images"/><summary type="html"><![CDATA[this is what advanced image components could look like]]></summary></entry><entry><title type="html">a post with vega lite</title><link href="https://lfcdepression.github.io/blog/2024/vega-lite/" rel="alternate" type="text/html" title="a post with vega lite"/><published>2024-01-27T00:20:00+00:00</published><updated>2024-01-27T00:20:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/vega-lite</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/vega-lite/"><![CDATA[<p>This is an example post with some <a href="https://vega.github.io/vega-lite/">vega lite</a> code.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">vega_lite
</span><span class="sb">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-vega_lite">{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "A dot plot showing each movie in the database, and the difference from the average movie rating. The display is sorted by year to visualize everything in sequential order. The graph is for all Movies before 2019.",
  "data": {
    "url": "https://raw.githubusercontent.com/vega/vega/main/docs/data/movies.json"
  },
  "transform": [
    {"filter": "datum['IMDB Rating'] != null"},
    {"filter": {"timeUnit": "year", "field": "Release Date", "range": [null, 2019]}},
    {
      "joinaggregate": [{
        "op": "mean",
        "field": "IMDB Rating",
        "as": "AverageRating"
      }]
    },
    {
      "calculate": "datum['IMDB Rating'] - datum.AverageRating",
      "as": "RatingDelta"
    }
  ],
  "mark": "point",
  "encoding": {
    "x": {
      "field": "Release Date",
      "type": "temporal"
    },
    "y": {
      "field": "RatingDelta",
      "type": "quantitative",
      "title": "Rating Delta"
    },
    "color": {
      "field": "RatingDelta",
      "type": "quantitative",
      "scale": {"domainMid": 0},
      "title": "Rating Delta"
    }
  }
}
</code></pre> <p>This plot supports both light and dark themes.</p>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><summary type="html"><![CDATA[this is what included vega lite code could look like]]></summary></entry><entry><title type="html">a post with geojson</title><link href="https://lfcdepression.github.io/blog/2024/geojson-map/" rel="alternate" type="text/html" title="a post with geojson"/><published>2024-01-26T17:57:00+00:00</published><updated>2024-01-26T17:57:00+00:00</updated><id>https://lfcdepression.github.io/blog/2024/geojson-map</id><content type="html" xml:base="https://lfcdepression.github.io/blog/2024/geojson-map/"><![CDATA[<p>This is an example post with some <a href="https://geojson.org/">geojson</a> code. The support is provided thanks to <a href="https://leafletjs.com/">Leaflet</a>. To create your own visualization, go to <a href="https://geojson.io/">geojson.io</a>.</p> <div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">```</span><span class="nl">geojson
</span><span class="sb">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}</span>
<span class="p">```</span>
</code></pre></div></div> <p>Which generates:</p> <pre><code class="language-geojson">{
  "type": "FeatureCollection",
  "features": [
    {
      "type": "Feature",
      "properties": {},
      "geometry": {
        "coordinates": [
          [
            [
              -60.11363029935569,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -3.162613728707967
            ],
            [
              -59.820894493858034,
              -2.904625022183211
            ],
            [
              -60.11363029935569,
              -2.904625022183211
            ]
          ]
        ],
        "type": "Polygon"
      }
    }
  ]
}
</code></pre>]]></content><author><name></name></author><category term="sample-posts"/><category term="formatting"/><category term="charts"/><category term="maps"/><summary type="html"><![CDATA[this is what included geojson code could look like]]></summary></entry></feed>